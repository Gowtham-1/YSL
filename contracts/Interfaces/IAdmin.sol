// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7; 

import "@openzeppelin/contracts/access/IAccessControl.sol";
interface IAdmin is IAccessControl{
    function lpDeposit() external view returns(bool);
    function admin() external view returns(address);
    function operator() external view returns(address);
    function Trigger() external view returns(address);
    function POL() external  view returns(address);
    function Treasury() external view returns(address);
    function BShareBUSDVault() external view returns(address);
    function bYSLVault() external view returns(address);
    function USDyBUSDVault() external view returns(address);
    function USDyVault() external view returns(address);
    function xYSLBUSDVault() external view returns(address);
    function xYSLVault() external view returns(address);
    function xBUSDVault() external view returns(address);
    function YSLBUSDVault() external view returns(address);
    function YSLVault() external view returns(address);
    function BShare() external view returns(address);
    function bYSL() external view returns(address);
    function USDs() external view returns(address);
    function USDy() external view returns(address);
    function YSL() external view returns(address);
    function xYSL() external view returns(address); 
    function USDyBUSD() external view returns(address);
    function xBUSD() external view returns(address);
    function xYSLS() external view returns(address);
    function YSLS() external view returns(address);
    function swapPage() external view returns(address);
    function PhoenixNFT() external view returns(address);
    function Opt1155() external view returns(address);
    function EarlyAccess() external view returns(address);
    function helperSwap() external view returns(address);
    function optVaultFactory() external view returns(address);
    function swap() external view returns(address);
    function temporaryHolding() external view returns(address);
    function whitelist() external view returns(address);
    function Blacklist() external view returns(address);
    function BUSD() external view returns(address);
    function WBNB() external view returns(address);
    function BShareVault() external view returns(address);
    function masterNTT() external view returns (address);
    function biswapRouter() external view returns (address);
    function ApeswapRouter() external view returns (address);
    function pancakeRouter() external view returns (address);
    function TeamAddress() external view returns (address);
    function MasterChef() external view returns (address);
    function Refferal() external view returns (address);
    function liquidityProvider() external view returns(address);
    function temporaryReferral() external view returns(address);
    function initialize(address owner) external;
    function setLpDeposit(bool deposit) external;
    function setRefferal(address _refferal)  external;
    function setWBNB(address _WBNB) external;
    function setBUSD(address _BUSD) external;
    function setLiquidityProvider(address _liquidityProvider) external;
    function setWhitelist(address _whitelist) external;
    function setBlacklist(address _blacklist) external;
    function sethelperSwap(address _helperSwap) external;
    function setTemporaryHolding(address _temporaryHolding) external;
    function setSwap(address _swap) external;
    function setOptVaultFactory(address _optVaultFactory) external;
    function setEarlyAccess(address _EarlyAccess) external;
    function setOpt1155(address _Opt1155) external;
    function setPhoenixNFT(address _PhoenixNFT) external;
    function setSwapPage(address _swapPage) external;
    function setYSL(address _YSL) external;
    function setYSLS(address _YSLS) external;
    function setxYSLs(address _xYSLS) external;
    function setxYSL(address _xYSL) external;
    function setxBUSD(address _xBUSD) external;
    function setUSDy(address _USDy) external;
    function setUSDs(address _USDs) external;
    function setbYSL(address _bYSL) external;
    function setBShare(address _BShare) external;
    function setYSLVault(address _YSLVault) external;
    function setYSLBUSDVault(address _YSLBUSDVault) external;
    function setxYSLVault(address _xYSLVault) external;
    function setxBUSDVault(address _xBUSDVault) external;
    function setxYSLBUSDVault(address _xYSLBUSDVault) external;
    function setUSDyVault(address _USDyVault) external;
    function setUSDyBUSDVault(address _USDyBUSDVault) external;
    function setbYSLVault(address _bYSLVault) external;
    function setBShareBUSD(address _BShareBUSD) external;
    function setPOL(address setPOL) external;
    function setBShareVault(address _BShareVault) external;
    function setTrigger(address _Trigger) external;
    function setmasterNTT(address _masterntt) external;
    function setbiswapRouter(address _biswapRouter)external;
    function setApeswapRouter(address _ApeswapRouter)external;
    function setpancakeRouter(address _pancakeRouter)external;
    function setTeamAddress(address _TeamAddress)external;
    function setMasterChef(address _MasterChef)external;
    function setTemporaryReferral(address _temporaryReferral)external;
    function USDyBUSDRebalancer()external returns(address);
    function BSHAREBUSDRebalancer()external returns(address);
    function BUSDVault()external returns(address);
    function setUSDyBUSDRebalancer(address _USDyBUSDRebalancer)external;
    function setBSHAREBUSDRebalancer(address _BSHAREBUSDRebalancer)external;
    function setBUSDVault(address _BUSDVault)external;
    function setBuyBackActivation(bool _value) external;
    function buyBackActivation() external view returns(bool);
    function buyBackActivationEpoch() external view returns(uint);
    function epochDuration() external view returns(uint);
    function lastEpoch() external view returns(uint);
    function setLastEpoch() external;
    function setEpochDuration(uint _time) external;
    function setUSDyBUSD(address _usdyBusd) external;
    function setBuyBackActivationEpoch() external;
    function vaultsAddresses() external view returns(address[] memory);
    function customVaultMaster() external view returns(address);
    function buyBackOwnerActivation() external view returns(bool);
    function DAI() external view returns(address);
    function USDC() external view returns(address);
    function USDT() external view returns(address);
    function DAIVault() external view returns(address);
    function USDCVault() external view returns(address);
    function USDTVault() external view returns(address);
    function setDAI() external view returns(address);
    function setUSDC() external view returns(address);
    function setUSDT() external view returns(address);
    function setDAIVault() external view returns(address);
    function setUSDCVault() external view returns(address);
    function setUSDTVault() external view returns(address);


}